# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from aruna.api.storage.services.v2 import dataset_service_pb2 as aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2


class DatasetServiceStub(object):
    """DatasetService

    Contains all methods that get/create or update Dataset and associated resources
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDataset = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/CreateDataset',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.CreateDatasetRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.CreateDatasetResponse.FromString,
                )
        self.GetDataset = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/GetDataset',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetResponse.FromString,
                )
        self.GetDatasets = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/GetDatasets',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetsRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetsResponse.FromString,
                )
        self.DeleteDataset = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/DeleteDataset',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.DeleteDatasetRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.DeleteDatasetResponse.FromString,
                )
        self.UpdateDatasetName = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetName',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetNameRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetNameResponse.FromString,
                )
        self.UpdateDatasetDescription = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetDescription',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDescriptionRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDescriptionResponse.FromString,
                )
        self.UpdateDatasetKeyValues = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetKeyValues',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetKeyValuesRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetKeyValuesResponse.FromString,
                )
        self.UpdateDatasetDataClass = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetDataClass',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDataClassRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDataClassResponse.FromString,
                )
        self.SnapshotDataset = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/SnapshotDataset',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.SnapshotDatasetRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.SnapshotDatasetResponse.FromString,
                )
        self.UpdateDatasetLicenses = channel.unary_unary(
                '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetLicenses',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetLicensesRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetLicensesResponse.FromString,
                )


class DatasetServiceServicer(object):
    """DatasetService

    Contains all methods that get/create or update Dataset and associated resources
    """

    def CreateDataset(self, request, context):
        """CreateNewDataset

        Status: BETA

        creates a new Dataset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataset(self, request, context):
        """GetDataset

        Status: BETA

        Request a specific dataset by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDatasets(self, request, context):
        """GetDatasets

        Status: BETA

        Queries multiple datasets by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDataset(self, request, context):
        """DeleteDataset

        Status: STABLE

        This request deletes the dataset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatasetName(self, request, context):
        """UpdateDatasetName

        Status: BETA

        Updates the dataset name. Caveat! Will rename the "s3 bucket" for data proxies! 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatasetDescription(self, request, context):
        """UpdateDatasetDescription

        Status: BETA

        Updates the dataset description.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatasetKeyValues(self, request, context):
        """UpdateDatasetKeyValues

        Status: BETA

        Updates the dataset key values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatasetDataClass(self, request, context):
        """UpdateDatasetDataClass

        Status: BETA

        Updates the dataset name. All (meta) data will be overwritten.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SnapshotDataset(self, request, context):
        """SnapshotDatasetRequest

        Status: BETA

        Archives the full dataset, rendering all downstream relations immutable
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatasetLicenses(self, request, context):
        """UpdateLicenses

        Status: BETA

        Updates the dataset metadata license and/or default data license.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataset,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.CreateDatasetRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.CreateDatasetResponse.SerializeToString,
            ),
            'GetDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataset,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetResponse.SerializeToString,
            ),
            'GetDatasets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDatasets,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetsRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetsResponse.SerializeToString,
            ),
            'DeleteDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDataset,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.DeleteDatasetRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.DeleteDatasetResponse.SerializeToString,
            ),
            'UpdateDatasetName': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDatasetName,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetNameRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetNameResponse.SerializeToString,
            ),
            'UpdateDatasetDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDatasetDescription,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDescriptionRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDescriptionResponse.SerializeToString,
            ),
            'UpdateDatasetKeyValues': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDatasetKeyValues,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetKeyValuesRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetKeyValuesResponse.SerializeToString,
            ),
            'UpdateDatasetDataClass': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDatasetDataClass,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDataClassRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDataClassResponse.SerializeToString,
            ),
            'SnapshotDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.SnapshotDataset,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.SnapshotDatasetRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.SnapshotDatasetResponse.SerializeToString,
            ),
            'UpdateDatasetLicenses': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDatasetLicenses,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetLicensesRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetLicensesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aruna.api.storage.services.v2.DatasetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DatasetService(object):
    """DatasetService

    Contains all methods that get/create or update Dataset and associated resources
    """

    @staticmethod
    def CreateDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/CreateDataset',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.CreateDatasetRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.CreateDatasetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/GetDataset',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDatasets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/GetDatasets',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetsRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.GetDatasetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/DeleteDataset',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.DeleteDatasetRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.DeleteDatasetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDatasetName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetName',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetNameRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDatasetDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetDescription',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDescriptionRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDescriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDatasetKeyValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetKeyValues',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetKeyValuesRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetKeyValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDatasetDataClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetDataClass',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDataClassRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetDataClassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SnapshotDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/SnapshotDataset',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.SnapshotDatasetRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.SnapshotDatasetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDatasetLicenses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.DatasetService/UpdateDatasetLicenses',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetLicensesRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_dataset__service__pb2.UpdateDatasetLicensesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
