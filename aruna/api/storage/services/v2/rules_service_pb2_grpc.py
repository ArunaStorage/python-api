# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from aruna.api.storage.services.v2 import rules_service_pb2 as aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2


class RulesServiceStub(object):
    """RulesService

    Status: BETA

    Contains all methods to edit and change rules
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRule = channel.unary_unary(
                '/aruna.api.storage.services.v2.RulesService/CreateRule',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleResponse.FromString,
                )
        self.GetRule = channel.unary_unary(
                '/aruna.api.storage.services.v2.RulesService/GetRule',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.GetRuleRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.GetRuleResponse.FromString,
                )
        self.ListRule = channel.unary_unary(
                '/aruna.api.storage.services.v2.RulesService/ListRule',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.ListRuleRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.ListRuleResponse.FromString,
                )
        self.UpdateRule = channel.unary_unary(
                '/aruna.api.storage.services.v2.RulesService/UpdateRule',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.UpdateRuleRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.UpdateRuleResponse.FromString,
                )
        self.DeleteRule = channel.unary_unary(
                '/aruna.api.storage.services.v2.RulesService/DeleteRule',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleResponse.FromString,
                )
        self.CreateRuleBinding = channel.unary_unary(
                '/aruna.api.storage.services.v2.RulesService/CreateRuleBinding',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleBindingRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleBindingResponse.FromString,
                )
        self.DeleteRuleBinding = channel.unary_unary(
                '/aruna.api.storage.services.v2.RulesService/DeleteRuleBinding',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleBindingRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleBindingResponse.FromString,
                )


class RulesServiceServicer(object):
    """RulesService

    Status: BETA

    Contains all methods to edit and change rules
    """

    def CreateRule(self, request, context):
        """CreateRule

        Status: ALPHA

        Create a new rule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRule(self, request, context):
        """GetRule

        Status: ALPHA

        Gets an existing rule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRule(self, request, context):
        """ListRule

        Status: ALPHA

        Lists rules -> Owned and public rules
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRule(self, request, context):
        """UpdateRule

        Status: ALPHA

        Updates an existing rule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRule(self, request, context):
        """DeleteRule

        Status: ALPHA

        Deletes an existing rule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRuleBinding(self, request, context):
        """CreateRuleBinding

        Status: ALPHA

        Associates a rule with an object, optionally cascading the rule to all children
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRuleBinding(self, request, context):
        """DeleteRuleBinding

        Status: ALPHA

        Disassociates a rule from an object
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RulesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRule,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleResponse.SerializeToString,
            ),
            'GetRule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRule,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.GetRuleRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.GetRuleResponse.SerializeToString,
            ),
            'ListRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRule,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.ListRuleRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.ListRuleResponse.SerializeToString,
            ),
            'UpdateRule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRule,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.UpdateRuleRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.UpdateRuleResponse.SerializeToString,
            ),
            'DeleteRule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRule,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleResponse.SerializeToString,
            ),
            'CreateRuleBinding': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRuleBinding,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleBindingRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleBindingResponse.SerializeToString,
            ),
            'DeleteRuleBinding': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRuleBinding,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleBindingRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleBindingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aruna.api.storage.services.v2.RulesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RulesService(object):
    """RulesService

    Status: BETA

    Contains all methods to edit and change rules
    """

    @staticmethod
    def CreateRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RulesService/CreateRule',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RulesService/GetRule',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.GetRuleRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.GetRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RulesService/ListRule',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.ListRuleRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.ListRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RulesService/UpdateRule',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.UpdateRuleRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.UpdateRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RulesService/DeleteRule',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRuleBinding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RulesService/CreateRuleBinding',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleBindingRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.CreateRuleBindingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRuleBinding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RulesService/DeleteRuleBinding',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleBindingRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_rules__service__pb2.DeleteRuleBindingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
