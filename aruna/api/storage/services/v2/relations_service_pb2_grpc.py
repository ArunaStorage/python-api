# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from aruna.api.storage.services.v2 import relations_service_pb2 as aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2


class RelationsServiceStub(object):
    """RelationsService

    Contains all methods to edit and change resource relations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ModifyRelations = channel.unary_unary(
                '/aruna.api.storage.services.v2.RelationsService/ModifyRelations',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.ModifyRelationsRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.ModifyRelationsResponse.FromString,
                )
        self.GetHierarchy = channel.unary_unary(
                '/aruna.api.storage.services.v2.RelationsService/GetHierarchy',
                request_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.GetHierarchyRequest.SerializeToString,
                response_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.GetHierarchyResponse.FromString,
                )


class RelationsServiceServicer(object):
    """RelationsService

    Contains all methods to edit and change resource relations
    """

    def ModifyRelations(self, request, context):
        """ModifyRelation

        Status: BETA

        Modifys all relations to / from a resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHierarchy(self, request, context):
        """GetHierachy

        Status: BETA

        Gets all downstream hierarchy relations from a resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RelationsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ModifyRelations': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyRelations,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.ModifyRelationsRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.ModifyRelationsResponse.SerializeToString,
            ),
            'GetHierarchy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHierarchy,
                    request_deserializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.GetHierarchyRequest.FromString,
                    response_serializer=aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.GetHierarchyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aruna.api.storage.services.v2.RelationsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RelationsService(object):
    """RelationsService

    Contains all methods to edit and change resource relations
    """

    @staticmethod
    def ModifyRelations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RelationsService/ModifyRelations',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.ModifyRelationsRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.ModifyRelationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHierarchy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aruna.api.storage.services.v2.RelationsService/GetHierarchy',
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.GetHierarchyRequest.SerializeToString,
            aruna_dot_api_dot_storage_dot_services_dot_v2_dot_relations__service__pb2.GetHierarchyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
