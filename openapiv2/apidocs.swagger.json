{
  "swagger": "2.0",
  "info": {
    "title": "Aruna Object Storage (AOS) REST API",
    "version": "2.0.0-beta.5"
  },
  "tags": [
    {
      "name": "ProjectService"
    },
    {
      "name": "BundlerService"
    },
    {
      "name": "DataproxyService"
    },
    {
      "name": "DataproxyBackendService"
    },
    {
      "name": "DataproxyUserService"
    },
    {
      "name": "HooksService"
    },
    {
      "name": "EventNotificationService"
    },
    {
      "name": "AuthorizationService"
    },
    {
      "name": "CollectionService"
    },
    {
      "name": "DatasetService"
    },
    {
      "name": "EndpointService"
    },
    {
      "name": "StorageStatusService"
    },
    {
      "name": "ObjectService"
    },
    {
      "name": "RelationsService"
    },
    {
      "name": "SearchService"
    },
    {
      "name": "ServiceAccountService"
    },
    {
      "name": "UserService"
    },
    {
      "name": "WorkspaceService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/auth": {
      "delete": {
        "summary": "DeleteAuthorization",
        "description": "Status: BETA\n\nThis creates a user-specific attribute that handles permission for a\nspecific resource",
        "operationId": "AuthorizationService_DeleteAuthorization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteAuthorizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DeleteAuthorizationRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      },
      "post": {
        "summary": "CreateAuthorization",
        "description": "Status: BETA\n\nThis creates a user-specific attribute that handles permission for a\nspecific resource",
        "operationId": "AuthorizationService_CreateAuthorization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateAuthorizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateAuthorizationRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      },
      "patch": {
        "summary": "UpdateAuthorization",
        "description": "Status: BETA\n\nThis creates a user-specific attribute that handles permission for a\nspecific resource",
        "operationId": "AuthorizationService_UpdateAuthorization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateAuthorizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2UpdateAuthorizationRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/v2/auth/register": {
      "post": {
        "summary": "RegisterUser",
        "description": "Status: BETA\n\nThis request should be called when a new user logs in for the first time",
        "operationId": "UserService_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2RegisterUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2RegisterUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/auth/token": {
      "post": {
        "summary": "CreateAPIToken",
        "description": "Status: BETA\n\nCreates an API token to authenticate",
        "operationId": "UserService_CreateAPIToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateAPITokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateAPITokenRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/auth/token/{tokenId}": {
      "get": {
        "summary": "GetAPIToken",
        "description": "Status: BETA\n\nReturns one API token by id",
        "operationId": "UserService_GetAPIToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetAPITokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "description": "The token id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "DeleteAPIToken",
        "description": "Status: STABLE\n\nDeletes the specified API Token",
        "operationId": "UserService_DeleteAPIToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteAPITokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "description": "The token_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/auth/tokens": {
      "get": {
        "summary": "GetAPITokens",
        "description": "Status: STABLE\n\nReturns a list of API tokens for a specific user",
        "operationId": "UserService_GetAPITokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetAPITokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "DeleteAPITokens",
        "description": "Status: BETA\n\nDeletes the specified API Token",
        "operationId": "UserService_DeleteAPITokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteAPITokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "This request invalidates all tokens of a specific user\nusually the user_id is specified via the provided oidc or aruna token\nThis user_id can be used by admins to invalidate all tokens of a specific\nuser",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/auths": {
      "get": {
        "summary": "GetAuthorization",
        "description": "Status: BETA\n\nThis gets resource specific user authorizations",
        "operationId": "AuthorizationService_GetAuthorizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetAuthorizationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/v2/bundle": {
      "delete": {
        "operationId": "BundlerService_DeleteBundle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteBundleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DeleteBundleRequest"
            }
          }
        ],
        "tags": [
          "BundlerService"
        ]
      },
      "post": {
        "operationId": "BundlerService_CreateBundle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateBundleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateBundleRequest"
            }
          }
        ],
        "tags": [
          "BundlerService"
        ]
      }
    },
    "/v2/collection": {
      "post": {
        "summary": "CreateNewCollection",
        "description": "Status: BETA\n\ncreates a new Collection",
        "operationId": "CollectionService_CreateCollection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateCollectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateCollectionRequest"
            }
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/collection/{collectionId}": {
      "get": {
        "summary": "GetCollection",
        "description": "Status: BETA\n\nRequest a specific collection by ID",
        "operationId": "CollectionService_GetCollection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetCollectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "description": "Requested id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CollectionService"
        ]
      },
      "delete": {
        "summary": "DeleteCollection",
        "description": "Status: STABLE\n\nThis request deletes the collection.",
        "operationId": "CollectionService_DeleteCollection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteCollectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/collection/{collectionId}/data_class": {
      "patch": {
        "summary": "UpdateCollectionDataClass",
        "description": "Status: BETA\n\nUpdates the collection name. All (meta) data will be overwritten.",
        "operationId": "CollectionService_UpdateCollectionDataClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateCollectionDataClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataClass": {
                  "$ref": "#/definitions/v2DataClass"
                }
              }
            }
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/collection/{collectionId}/description": {
      "patch": {
        "summary": "UpdateCollectionDescription",
        "description": "Status: BETA\n\nUpdates the collection description.",
        "operationId": "CollectionService_UpdateCollectionDescription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateCollectionDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/collection/{collectionId}/key_values": {
      "patch": {
        "summary": "UpdateCollectionKeyValues",
        "description": "Status: BETA\n\nUpdates the collection key values.",
        "operationId": "CollectionService_UpdateCollectionKeyValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateCollectionKeyValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  }
                },
                "removeKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/collection/{collectionId}/name": {
      "patch": {
        "summary": "UpdateCollectionName",
        "description": "Status: BETA\n\nUpdates the collection name. Caveat! Will rename the \"s3 bucket\" for data proxies!",
        "operationId": "CollectionService_UpdateCollectionName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateCollectionNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/collection/{collectionId}/snapshot": {
      "post": {
        "summary": "SnapshotCollectionRequest",
        "description": "Status: BETA\n\nArchives the full collection, rendering all downstream relations immutable",
        "operationId": "CollectionService_SnapshotCollection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2SnapshotCollectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/collections": {
      "get": {
        "summary": "GetCollections",
        "description": "Status: BETA\n\nQueries multiple collections by ID",
        "operationId": "CollectionService_GetCollections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetCollectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CollectionService"
        ]
      }
    },
    "/v2/credentials": {
      "post": {
        "summary": "GetCredentials",
        "description": "Status: BETA\n\nAuthorized method that needs a aruna-token to exchange for dataproxy\nspecific S3AccessKey and S3SecretKey",
        "operationId": "DataproxyUserService_GetCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetCredentialsRequest"
            }
          }
        ],
        "tags": [
          "DataproxyUserService"
        ]
      }
    },
    "/v2/dataset": {
      "post": {
        "summary": "CreateNewDataset",
        "description": "Status: BETA\n\ncreates a new Dataset",
        "operationId": "DatasetService_CreateDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateDatasetRequest"
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/dataset/{datasetId}": {
      "get": {
        "summary": "GetDataset",
        "description": "Status: BETA\n\nRequest a specific dataset by ID",
        "operationId": "DatasetService_GetDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Requested id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      },
      "delete": {
        "summary": "DeleteDataset",
        "description": "Status: STABLE\n\nThis request deletes the dataset.",
        "operationId": "DatasetService_DeleteDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/dataset/{datasetId}/data_class": {
      "patch": {
        "summary": "UpdateDatasetDataClass",
        "description": "Status: BETA\n\nUpdates the dataset name. All (meta) data will be overwritten.",
        "operationId": "DatasetService_UpdateDatasetDataClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateDatasetDataClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataClass": {
                  "$ref": "#/definitions/v2DataClass"
                }
              }
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/dataset/{datasetId}/description": {
      "patch": {
        "summary": "UpdateDatasetDescription",
        "description": "Status: BETA\n\nUpdates the dataset description.",
        "operationId": "DatasetService_UpdateDatasetDescription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateDatasetDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/dataset/{datasetId}/key_values": {
      "patch": {
        "summary": "UpdateDatasetKeyValues",
        "description": "Status: BETA\n\nUpdates the dataset key values.",
        "operationId": "DatasetService_UpdateDatasetKeyValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateDatasetKeyValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  }
                },
                "removeKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/dataset/{datasetId}/name": {
      "patch": {
        "summary": "UpdateDatasetName",
        "description": "Status: BETA\n\nUpdates the dataset name. Caveat! Will rename the \"s3 bucket\" for data proxies!",
        "operationId": "DatasetService_UpdateDatasetName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateDatasetNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/dataset/{datasetId}/snapshot": {
      "post": {
        "summary": "SnapshotDatasetRequest",
        "description": "Status: BETA\n\nArchives the full dataset, rendering all downstream relations immutable",
        "operationId": "DatasetService_SnapshotDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2SnapshotDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/datasets": {
      "get": {
        "summary": "GetDatasets",
        "description": "Status: BETA\n\nQueries multiple datasets by ID",
        "operationId": "DatasetService_GetDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/endpoint": {
      "get": {
        "summary": "GetEndpoint",
        "description": "Status: BETA\n\nGets an specific endpoint by ID or Name",
        "operationId": "EndpointService_GetEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetEndpointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "endpointName",
            "description": "The name of the endpoint",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId",
            "description": "Id of the endpoint",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EndpointService"
        ]
      },
      "post": {
        "summary": "CreateEndpoint",
        "description": "Status: BETA\n\nRegisters a new Endpoint (Aruna DataProxy) to the server\nNeeds admin permissions",
        "operationId": "EndpointService_CreateEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateEndpointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateEndpointRequest"
            }
          }
        ],
        "tags": [
          "EndpointService"
        ]
      }
    },
    "/v2/endpoint/default": {
      "get": {
        "summary": "GetDefaultEndpoint",
        "description": "Status: BETA\n\nThis request returns the default endpoint for the current aruna_server\nIt may produce different results depending on the used server",
        "operationId": "EndpointService_GetDefaultEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetDefaultEndpointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "EndpointService"
        ]
      }
    },
    "/v2/endpoint/sync": {
      "get": {
        "summary": "FullSyncEndpoint",
        "description": "Status: BETA\n\nRequests a full sync of all endpoint related data",
        "operationId": "EndpointService_FullSyncEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v2FullSyncEndpointResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v2FullSyncEndpointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "EndpointService"
        ]
      }
    },
    "/v2/endpoint/{endpointId}": {
      "delete": {
        "summary": "DeleteEndpoint",
        "description": "Status: BETA\n\nDeletes a specific endpoint by id\nThis needs admin permissions",
        "operationId": "EndpointService_DeleteEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteEndpointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "endpointId",
            "description": "Endpoint_id to delete",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EndpointService"
        ]
      }
    },
    "/v2/endpoints": {
      "get": {
        "summary": "GetEndpoints",
        "description": "Status: BETA\n\nGets all available endpoints",
        "operationId": "EndpointService_GetEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetEndpointsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "EndpointService"
        ]
      }
    },
    "/v2/hook": {
      "post": {
        "summary": "Created Hooks are always associated with the owner that creates the hook",
        "operationId": "HooksService_CreateHook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateHookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateHookRequest"
            }
          }
        ],
        "tags": [
          "HooksService"
        ]
      }
    },
    "/v2/hook/callback": {
      "delete": {
        "operationId": "HooksService_HookCallback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2HookCallbackResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "error.error",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secret",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hookId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pubkeySerial",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "HooksService"
        ]
      }
    },
    "/v2/hook/{hookId}": {
      "delete": {
        "operationId": "HooksService_DeleteHook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteHookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "HooksService"
        ]
      },
      "post": {
        "operationId": "HooksService_AddProjectsToHook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2AddProjectsToHookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "projectIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "HooksService"
        ]
      }
    },
    "/v2/hooks/owner/{userId}": {
      "get": {
        "operationId": "HooksService_ListOwnedHooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListOwnedHooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "ADMIN only",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "HooksService"
        ]
      }
    },
    "/v2/hooks/project/{projectId}": {
      "get": {
        "operationId": "HooksService_ListProjectHooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListProjectHooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "HooksService"
        ]
      }
    },
    "/v2/info/anouncements": {
      "get": {
        "operationId": "StorageStatusService_GetAnouncements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetAnouncementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "StorageStatusService"
        ]
      }
    },
    "/v2/info/anouncements/set": {
      "post": {
        "operationId": "StorageStatusService_SetAnouncements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2SetAnouncementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2SetAnouncementsRequest"
            }
          }
        ],
        "tags": [
          "StorageStatusService"
        ]
      }
    },
    "/v2/info/pubkeys": {
      "get": {
        "operationId": "StorageStatusService_GetPubkeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetPubkeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "StorageStatusService"
        ]
      }
    },
    "/v2/info/status": {
      "get": {
        "summary": "GetStorageStatus",
        "description": "Status: ALPHA\n\nA request to get the current status of the storage components by location(s)",
        "operationId": "StorageStatusService_GetStorageStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetStorageStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "StorageStatusService"
        ]
      }
    },
    "/v2/info/version": {
      "get": {
        "summary": "GetStorageVersion",
        "description": "Status: BETA\n\nA request to get the current version of the server application\nString representation and https://semver.org/",
        "operationId": "StorageStatusService_GetStorageVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetStorageVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "StorageStatusService"
        ]
      }
    },
    "/v2/object": {
      "post": {
        "summary": "CreateObject",
        "description": "Status: BETA\n\nThis creates a new object\nInitializing an object will put it in a staging area.",
        "operationId": "ObjectService_CreateObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateObjectRequest"
            }
          }
        ],
        "tags": [
          "ObjectService"
        ]
      }
    },
    "/v2/object/{objectId}": {
      "get": {
        "summary": "GetObject",
        "description": "Status: BETA\n\ngets a specific Object by ID that is associated to the\ncurrent collection By default only the latest revision of an object will be\nreturned Specify a revision_number to select an older revision With the\noptional with_url boolean a download link can automatically be requested",
        "operationId": "ObjectService_GetObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apistorageservicesv2GetObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "description": "Object Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ObjectService"
        ]
      },
      "delete": {
        "summary": "DeleteObject",
        "description": "Status: BETA\n\nDeletes the object with the complete revision history.",
        "operationId": "ObjectService_DeleteObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apistorageservicesv2DeleteObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "description": "ObjectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "withRevisions": {
                  "type": "boolean",
                  "title": "Delete including revisions"
                }
              }
            }
          }
        ],
        "tags": [
          "ObjectService"
        ]
      },
      "post": {
        "summary": "UpdateObject",
        "description": "Status: BETA\n\nObjects are immutable!\nUpdating an object will create a new revision for the object\nThis method will put the new revision in a staging area.\nStaged objects will get a separate staging id and need to be finished\nbefore they can be used.",
        "operationId": "ObjectService_UpdateObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "description": "Existing object ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "object name"
                },
                "description": {
                  "type": "string",
                  "title": "object description"
                },
                "addKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  },
                  "title": "key_values to add"
                },
                "removeKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  },
                  "title": "key_values to remove"
                },
                "dataClass": {
                  "$ref": "#/definitions/v2DataClass",
                  "title": "New DataClass"
                },
                "projectId": {
                  "type": "string"
                },
                "collectionId": {
                  "type": "string"
                },
                "datasetId": {
                  "type": "string"
                },
                "hashes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2Hash"
                  }
                },
                "forceRevision": {
                  "type": "boolean",
                  "title": "Force new object revision"
                }
              }
            }
          }
        ],
        "tags": [
          "ObjectService"
        ]
      }
    },
    "/v2/object/{objectId}/download": {
      "get": {
        "summary": "GetDownloadUrl",
        "description": "Status: BETA\n\nThis is a proxy method that will call the apropriate method at dataproxy level\nwill return a url that can be used to download a file from S3.",
        "operationId": "ObjectService_GetDownloadURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetDownloadURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ObjectService"
        ]
      }
    },
    "/v2/object/{objectId}/finish": {
      "patch": {
        "summary": "FinishObjectStaging",
        "description": "Status: BETA\n\nThis method completes the staging of an object.",
        "operationId": "ObjectService_FinishObjectStaging",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2FinishObjectStagingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "description": "ObjectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "contentLen": {
                  "type": "string",
                  "format": "int64",
                  "title": "Final content len"
                },
                "hashes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2Hash"
                  },
                  "description": "Hash of the uploaded data - used to verify the data integrity.\nThis supports multiple hashing algorithms."
                },
                "completedParts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2CompletedParts"
                  },
                  "title": "If the upload was multipart, this is the list of parts that were uploaded.\nShould be empty if the upload was not multipart.\n(optional)"
                }
              }
            }
          }
        ],
        "tags": [
          "ObjectService"
        ]
      }
    },
    "/v2/object/{objectId}/upload": {
      "get": {
        "summary": "GetUploadURL",
        "description": "Status: BETA\n\nThis is a proxy method that will call the apropriate method at dataproxy level\nThis method will return a (multi-part) url that can be used to upload a\nfile to S3. Part is a optional query parameter that can be used to upload a\npart of the file / multipart upload.",
        "operationId": "ObjectService_GetUploadURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetUploadURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "description": "ObjectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "multipart",
            "description": "Is this a multipart upload?",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "partNumber",
            "description": "(optional) if multi was initialized",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ObjectService"
        ]
      }
    },
    "/v2/objects": {
      "get": {
        "summary": "GetObjects",
        "description": "Status: BETA\n\nGet multiple objects by ID at once",
        "operationId": "ObjectService_GetObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetObjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectIds",
            "description": "Object ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ObjectService"
        ]
      }
    },
    "/v2/project": {
      "post": {
        "summary": "CreateProject",
        "description": "Status: BETA\n\nCreates a new project. All subsequent resources are part of a project.",
        "operationId": "ProjectService_CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateProjectRequest"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/project/{projectId}": {
      "get": {
        "summary": "GetProject",
        "description": "Status: BETA\n\nRequests a project (by id)",
        "operationId": "ProjectService_GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "The id of the project to get",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "delete": {
        "summary": "DeleteProject",
        "description": "Status: BETA\n\nDeletes the project and all its associated data. Must be empty!",
        "operationId": "ProjectService_DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "The id of the project to destroy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/project/{projectId}/archive": {
      "post": {
        "summary": "ArchiveProjectRequest",
        "description": "Status: BETA\n\nArchives the full project, rendering all downstream relations immutable",
        "operationId": "ProjectService_ArchiveProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ArchiveProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/project/{projectId}/data_class": {
      "patch": {
        "summary": "UpdateProjectDataClass",
        "description": "Status: BETA\n\nUpdates the project name. All (meta) data will be overwritten.",
        "operationId": "ProjectService_UpdateProjectDataClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateProjectDataClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataClass": {
                  "$ref": "#/definitions/v2DataClass"
                }
              }
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/project/{projectId}/description": {
      "patch": {
        "summary": "UpdateProjectDescription",
        "description": "Status: BETA\n\nUpdates the project name.",
        "operationId": "ProjectService_UpdateProjectDescription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateProjectDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/project/{projectId}/key_values": {
      "patch": {
        "summary": "UpdateProjectKeyValues",
        "description": "Status: BETA\n\nUpdates the project key values.",
        "operationId": "ProjectService_UpdateProjectKeyValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateProjectKeyValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  }
                },
                "removeKeyValues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v2KeyValue"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/project/{projectId}/name": {
      "patch": {
        "summary": "UpdateProjectName",
        "description": "Status: BETA\n\nUpdates the project name. Caveat! Will rename the \"s3 bucket\" for data proxies!",
        "operationId": "ProjectService_UpdateProjectName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateProjectNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/projects": {
      "get": {
        "summary": "GetProjects",
        "description": "Status: BETA\n\nAdmin request to get all projects",
        "operationId": "ProjectService_GetProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectIds",
            "description": "optional filter for specific ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/v2/relation": {
      "post": {
        "summary": "ModifyRelation",
        "description": "Status: BETA\n\nModifys all relations to / from a resource",
        "operationId": "RelationsService_ModifyRelations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ModifyRelationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2ModifyRelationsRequest"
            }
          }
        ],
        "tags": [
          "RelationsService"
        ]
      }
    },
    "/v2/relation/hierarchy": {
      "get": {
        "summary": "GetHierachy",
        "description": "Status: BETA\n\nGets all downstream hierarchy relations from a resource",
        "operationId": "RelationsService_GetHierarchy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetHierarchyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RelationsService"
        ]
      }
    },
    "/v2/replica/pull": {
      "post": {
        "summary": "PullReplica",
        "description": "Status: BETA\n\nManually request data to be transferred to this data-proxy",
        "operationId": "DataproxyUserService_PullReplica",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2PullReplicaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2PullReplicaRequest"
            }
          }
        ],
        "tags": [
          "DataproxyUserService"
        ]
      }
    },
    "/v2/replica/push": {
      "post": {
        "summary": "PushReplica",
        "description": "Status: BETA\n\nManually transfers a replica to another data-proxy",
        "operationId": "DataproxyUserService_PushReplica",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2PushReplicaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2PushReplicaRequest"
            }
          }
        ],
        "tags": [
          "DataproxyUserService"
        ]
      }
    },
    "/v2/replica/status": {
      "get": {
        "summary": "PullReplica",
        "description": "Status: BETA\n\nStatus of the previous replication request",
        "operationId": "DataproxyUserService_ReplicationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ReplicationStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "replicationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DataproxyUserService"
        ]
      }
    },
    "/v2/resource/{resourceId}": {
      "get": {
        "summary": "GetResource",
        "description": "Status: BETA\n\nRetrieves resource by its ID.",
        "operationId": "SearchService_GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/v2/resource/{resourceId}/access": {
      "get": {
        "summary": "RequestResourceAccess",
        "description": "Status: ALPHA\n\nRequests access to resources",
        "operationId": "SearchService_RequestResourceAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2RequestResourceAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/v2/resources": {
      "get": {
        "summary": "GetResources",
        "description": "Status: BETA\n\nRetrieves resources by a list of IDs.",
        "operationId": "SearchService_GetResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/v2/search": {
      "post": {
        "summary": "SearchResources",
        "description": "Status: BETA\n\nSearches the index for applicable resources (only public + private can be searched)",
        "operationId": "SearchService_SearchResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2SearchResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2SearchResourcesRequest"
            }
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/v2/service_account": {
      "post": {
        "summary": "CreateServiceAccount",
        "description": "Status: BETA\n\nCreates a service account for a given project\nIf the service account has permissions for the global Admin project\nit will be a global service account that can interact with any resource",
        "operationId": "ServiceAccountService_CreateServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateServiceAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateServiceAccountRequest"
            }
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/service_account/{svcAccountId}": {
      "delete": {
        "summary": "DeleteServiceAccount",
        "description": "Status: BETA\n\nDeletes a service account (by id)",
        "operationId": "ServiceAccountService_DeleteServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteServiceAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/service_account/{svcAccountId}/permissions": {
      "put": {
        "summary": "SetServiceAccountPermission",
        "description": "Status: BETA\n\nOverwrites the project specific permissions for a service account",
        "operationId": "ServiceAccountService_SetServiceAccountPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2SetServiceAccountPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "permission": {
                  "$ref": "#/definitions/v2Permission"
                }
              }
            }
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/service_account/{svcAccountId}/s3_credentials": {
      "get": {
        "summary": "GetS3Credentials",
        "description": "Status: ALPHA\n\nGets s3 credentials for a specific user and data_proxy",
        "operationId": "ServiceAccountService_GetS3CredentialsSvcAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetS3CredentialsSvcAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/service_account/{svcAccountId}/token": {
      "post": {
        "summary": "CreateServiceAccountToken",
        "description": "Status: BETA\n\nCreates a token for a service account\nEach service account can only have one permission -\u003e The token will have the same permission as the\nservice account",
        "operationId": "ServiceAccountService_CreateServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateServiceAccountTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "permission": {
                  "$ref": "#/definitions/v2Permission",
                  "title": "Identify the associated project (should always be provided)"
                },
                "name": {
                  "type": "string",
                  "title": "(optional) Token name"
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "title": "(optional) Token expiry"
                }
              }
            }
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/service_account/{svcAccountId}/token/{tokenId}": {
      "get": {
        "summary": "GetServiceAccountToken",
        "description": "Status: BETA\n\nThis requests the overall information about a specifc service account token (by id)\nit will not contain the token itself.",
        "operationId": "ServiceAccountService_GetServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetServiceAccountTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      },
      "delete": {
        "summary": "DeleteServiceAccountToken",
        "description": "Status: BETA\n\nDeletes one service account token by ID",
        "operationId": "ServiceAccountService_DeleteServiceAccountToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteServiceAccountTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/service_account/{svcAccountId}/tokens": {
      "get": {
        "summary": "GetServiceAccountTokens",
        "description": "Status: BETA\n\nThis requests the overall information about all service account tokens\nit will not contain the token itself.",
        "operationId": "ServiceAccountService_GetServiceAccountTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetServiceAccountTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      },
      "delete": {
        "summary": "DeleteServiceAccountTokens",
        "description": "Status: BETA\n\nDeletes all service account tokens",
        "operationId": "ServiceAccountService_DeleteServiceAccountTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteServiceAccountTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "svcAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/user": {
      "get": {
        "summary": "GetUserRequest",
        "description": "Status: STABLE\n\nThis is a request that returns the user information of the\ncurrent user or if invoked by an admin from another user",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Optional user_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/acknowledge": {
      "get": {
        "summary": "AcknowledgePersonalNotifications",
        "description": "Status: ALPHA\n\nAcknowledges personal notifications",
        "operationId": "UserService_AcknowledgePersonalNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2AcknowledgePersonalNotificationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "notificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/all": {
      "get": {
        "summary": "GetAllUsers",
        "description": "Status: ALPHA\n\nGet all users including permissions (Admin only)",
        "operationId": "UserService_GetAllUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetAllUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/display_name": {
      "patch": {
        "summary": "UpdateUserDisplayName",
        "description": "Status: STABLE\n\nUpdates the Displayname for the user (Personal only)",
        "operationId": "UserService_UpdateUserDisplayName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateUserDisplayNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2UpdateUserDisplayNameRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/not_activated": {
      "get": {
        "summary": "GetNotActivatedUsers",
        "description": "Status: STABLE\n\nGet all not activated users (Admin only)",
        "operationId": "UserService_GetNotActivatedUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetNotActivatedUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/notifications": {
      "get": {
        "summary": "GetPersonalNotifications",
        "description": "Status: ALPHA\n\nFetches personal notifications",
        "operationId": "UserService_GetPersonalNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetPersonalNotificationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/redacted": {
      "get": {
        "summary": "GetUserRequestRedacted",
        "description": "Status: STABLE\n\nThis is a request that returns the user information of the\ncurrent user or if invoked by an admin from another user\nRedacts personal information like name or email",
        "operationId": "UserService_GetUserRedacted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetUserRedactedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Optional user_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/{userId}/activate": {
      "patch": {
        "summary": "ActivateUser",
        "description": "Status: BETA\n\nThis activates a specific user (Admin request)",
        "operationId": "UserService_ActivateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ActivateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "User to activate",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/{userId}/deactivate": {
      "patch": {
        "summary": "DeActivateUser",
        "description": "Status: BETA\n\nThis deactivates a specific user (Admin request)",
        "operationId": "UserService_DeactivateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeactivateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "User to activate",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/{userId}/email": {
      "patch": {
        "summary": "UpdateUserDisplayName",
        "description": "Status: ALPHA\n\nUpdates the email for the user (Personal only)",
        "operationId": "UserService_UpdateUserEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateUserEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newEmail": {
                  "type": "string",
                  "title": "If new email is empty == unsubscribe"
                }
              }
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/{userId}/proxy_token": {
      "get": {
        "summary": "GetDataproxyToken",
        "description": "Status: ALPHA\n\nGets token for a specific user and data_proxy",
        "operationId": "UserService_GetDataproxyTokenUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetDataproxyTokenUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.s3Credentials",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "context.copy.resource",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.copy.targetEndpoint",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.copy.push",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/{userId}/s3_credentials": {
      "get": {
        "summary": "GetS3Credentials",
        "description": "Status: ALPHA\n\nGets s3 credentials for a specific user and data_proxy",
        "operationId": "UserService_GetS3CredentialsUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetS3CredentialsUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v2/user/{userId}/svc_proxy_token": {
      "get": {
        "summary": "GetDataproxyToken",
        "description": "Status: ALPHA\n\nGets token for a specific user and data_proxy",
        "operationId": "ServiceAccountService_GetDataproxyTokenSvcAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetDataproxyTokenSvcAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.s3Credentials",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "context.copy.resource",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.copy.targetEndpoint",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "context.copy.push",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/v2/workspace": {
      "post": {
        "summary": "CreateWorkspace",
        "description": "Status: ALPHA\n\nA new request to create a personal anonymous workspace",
        "operationId": "WorkspaceService_CreateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateWorkspaceRequest"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/v2/workspace/template": {
      "get": {
        "summary": "ListOwnedWorkspaceTemplates",
        "description": "Status: ALPHA\n\nLists owned workspace templates",
        "operationId": "WorkspaceService_ListOwnedWorkspaceTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListOwnedWorkspaceTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "WorkspaceService"
        ]
      },
      "post": {
        "summary": "CreatesNewWorkspaceTemplate",
        "description": "Status: ALPHA\n\nThis will create a new template for workspaces (admin only)",
        "operationId": "WorkspaceService_CreateWorkspaceTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateWorkspaceTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateWorkspaceTemplateRequest"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/v2/workspace/template/{templateId}": {
      "get": {
        "summary": "GetWorkspaceTemplatesById",
        "description": "Status: ALPHA\n\nGets workspace template by id",
        "operationId": "WorkspaceService_GetWorkspaceTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetWorkspaceTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      },
      "delete": {
        "summary": "DeleteWorkspaceTemplates",
        "description": "Status: ALPHA\n\nDeletes specified workspace templates",
        "operationId": "WorkspaceService_DeleteWorkspaceTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteWorkspaceTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/v2/workspace/{workspaceId}": {
      "delete": {
        "summary": "DeleteWorkspace",
        "description": "Status: ALPHA\n\nDelete a workspace",
        "operationId": "WorkspaceService_DeleteWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/v2/workspace/{workspaceId}/claim": {
      "post": {
        "summary": "DeleteWorkspace",
        "description": "Status: ALPHA\n\nClaims an anonymous workspace, and transfers the owner to a regular user account.",
        "operationId": "WorkspaceService_ClaimWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ClaimWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "description": "This can only be called by an registered user,\nthat is in possesion of the workspace_id and workspace token\nIt will remove the service account and claim all references \"as\" the user.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/v2/{objectId}/clone": {
      "post": {
        "summary": "CloneObject",
        "description": "Status: BETA\n\nThis method clones an object and creates a copy in the same collection.\nThis copy has a new id and revision and will not receive any updates from\nthe original object.",
        "operationId": "ObjectService_CloneObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CloneObjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectId",
            "description": "ObjectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "string"
                },
                "collectionId": {
                  "type": "string"
                },
                "datasetId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "ObjectService"
        ]
      }
    }
  },
  "definitions": {
    "apidataproxyservicesv2DeleteObjectResponse": {
      "type": "object"
    },
    "apidataproxyservicesv2GetObjectResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "apistorageservicesv2DeleteObjectResponse": {
      "type": "object"
    },
    "apistorageservicesv2GetObjectResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/v2Object"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "modelsv2Status": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_INITIALIZING",
        "STATUS_VALIDATING",
        "STATUS_AVAILABLE",
        "STATUS_UNAVAILABLE",
        "STATUS_ERROR",
        "STATUS_DELETED"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": "- STATUS_UNSPECIFIED: Unspecified\n - STATUS_INITIALIZING: This object is initializing -\u003e Staging\n - STATUS_VALIDATING: Data got uploaded and a validating hook got triggered\n - STATUS_AVAILABLE: Data is available\n - STATUS_UNAVAILABLE: Data is temporarily not available\n - STATUS_ERROR: Validating failed or fatal error in data proxy\n - STATUS_DELETED: Object got deleted",
      "title": "An arbitrary status for Objects"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "storagemodelsv2ComponentStatus": {
      "type": "string",
      "enum": [
        "COMPONENT_STATUS_UNSPECIFIED",
        "COMPONENT_STATUS_INITIALIZING",
        "COMPONENT_STATUS_AVAILABLE",
        "COMPONENT_STATUS_DEGRADED",
        "COMPONENT_STATUS_UNAVAILABLE",
        "COMPONENT_STATUS_MAINTENANCE"
      ],
      "default": "COMPONENT_STATUS_UNSPECIFIED",
      "title": "Status for endpoints"
    },
    "storageservicesv2ComponentStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of a specific component e.g. server, dataproxy etc. and their status by location"
        },
        "status": {
          "$ref": "#/definitions/storagemodelsv2ComponentStatus"
        }
      }
    },
    "v2AcknowledgeMessageBatchResponse": {
      "type": "object"
    },
    "v2AcknowledgePersonalNotificationsResponse": {
      "type": "object"
    },
    "v2ActivateUserResponse": {
      "type": "object"
    },
    "v2AddHook": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v2AddLabel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v2AddProjectsToHookResponse": {
      "type": "object"
    },
    "v2Anouncement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2AnouncementEvent": {
      "type": "object",
      "properties": {
        "newDataProxyId": {
          "type": "string"
        },
        "removeDataProxyId": {
          "type": "string"
        },
        "updateDataProxyId": {
          "type": "string"
        },
        "newPubkey": {
          "type": "integer",
          "format": "int32"
        },
        "removePubkey": {
          "type": "integer",
          "format": "int32"
        },
        "downtime": {
          "$ref": "#/definitions/v2ScheduledDowntime"
        },
        "version": {
          "$ref": "#/definitions/v2NewVersion"
        },
        "reply": {
          "$ref": "#/definitions/v2Reply"
        }
      }
    },
    "v2ArchiveProjectResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project",
          "title": "This project will be returned via an Persistent Identifier! Updates will be impossible"
        }
      }
    },
    "v2ClaimWorkspaceResponse": {
      "type": "object"
    },
    "v2CloneObjectResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/v2Object",
          "description": "This describes the new object."
        }
      }
    },
    "v2Collection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ASDASDASDOPASKIDPO"
        },
        "name": {
          "type": "string",
          "title": "my_mags"
        },
        "description": {
          "type": "string",
          "title": "ENA asda234928349028 MAG 1293819203819028i V1"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "Collection specific labels / hooks"
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Relation"
          },
          "title": "Relations to internal and external sources"
        },
        "stats": {
          "$ref": "#/definitions/v2Stats"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/modelsv2Status"
        },
        "dynamic": {
          "type": "boolean"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DataEndpoint"
          }
        }
      }
    },
    "v2CollectionRelations": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "datasetChildren": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DatasetRelations"
          }
        },
        "objectChildren": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2CompleteMultiPartUploadResponse": {
      "type": "object"
    },
    "v2CompletedPart": {
      "type": "object",
      "properties": {
        "partNumber": {
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "v2CompletedParts": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "title": "Multipart identifier"
        },
        "part": {
          "type": "string",
          "format": "int64",
          "title": "Part number"
        }
      }
    },
    "v2ComponentVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of a specific component e.g. server, dataproxy etc. and their status by location"
        },
        "version": {
          "$ref": "#/definitions/v2SemanticVersion"
        }
      }
    },
    "v2Context": {
      "type": "object",
      "properties": {
        "s3Credentials": {
          "type": "boolean"
        },
        "copy": {
          "$ref": "#/definitions/v2Copy"
        }
      }
    },
    "v2Copy": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string"
        },
        "targetEndpoint": {
          "type": "string"
        },
        "push": {
          "type": "boolean"
        }
      }
    },
    "v2CreateAPITokenRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Token name"
        },
        "permission": {
          "$ref": "#/definitions/v2Permission",
          "title": "Personal or resource specific"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "title": "Token expiry"
        }
      }
    },
    "v2CreateAPITokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/v2Token",
          "title": "This contains only the token description"
        },
        "tokenSecret": {
          "type": "string",
          "title": "This is the actual secret token\nAttention, this can not be recreated and needs to be stored securely\nNew tokens will always contain a new secret"
        }
      }
    },
    "v2CreateAuthorizationRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "permissionLevel": {
          "$ref": "#/definitions/v2PermissionLevel",
          "title": "Can also include \"deny\""
        }
      }
    },
    "v2CreateAuthorizationResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "permissionLevel": {
          "$ref": "#/definitions/v2PermissionLevel"
        }
      }
    },
    "v2CreateBucketResponse": {
      "type": "object"
    },
    "v2CreateBundleRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filename": {
          "type": "string",
          "title": ".tar.gz / .zip"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "title": "Default 1 Month"
        }
      }
    },
    "v2CreateBundleResponse": {
      "type": "object",
      "properties": {
        "bundleId": {
          "type": "string"
        },
        "bundleUrl": {
          "type": "string"
        }
      }
    },
    "v2CreateCollectionRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "collection name"
        },
        "description": {
          "type": "string",
          "title": "description"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "collection specific labels / hooks"
        },
        "externalRelations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ExternalRelation"
          },
          "title": "External relations (URLs / IDs from external sources)"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass",
          "title": "DataClass"
        },
        "projectId": {
          "type": "string"
        }
      }
    },
    "v2CreateCollectionResponse": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2Collection",
          "title": "The new collection_id"
        }
      }
    },
    "v2CreateDatasetRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "dataset name"
        },
        "description": {
          "type": "string",
          "title": "Description"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "dataset specific labels / hooks"
        },
        "externalRelations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ExternalRelation"
          },
          "title": "External relations (URLs / IDs from external sources)"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass",
          "title": "DataClass"
        },
        "projectId": {
          "type": "string"
        },
        "collectionId": {
          "type": "string"
        }
      }
    },
    "v2CreateDatasetResponse": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/v2Dataset",
          "title": "The new dataset_id"
        }
      }
    },
    "v2CreateEndpointRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Endpoint name"
        },
        "epVariant": {
          "$ref": "#/definitions/v2EndpointVariant",
          "title": "Endpoint type"
        },
        "isPublic": {
          "type": "boolean",
          "title": "Is this endpoint public"
        },
        "pubkey": {
          "type": "string",
          "title": "required public_key"
        },
        "hostConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2EndpointHostConfig"
          },
          "title": "List of EndpointHostConfigs"
        }
      }
    },
    "v2CreateEndpointResponse": {
      "type": "object",
      "properties": {
        "endpoint": {
          "$ref": "#/definitions/v2Endpoint",
          "title": "Overview of the created endpoint"
        }
      }
    },
    "v2CreateHookRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "trigger": {
          "$ref": "#/definitions/v2Trigger"
        },
        "hook": {
          "$ref": "#/definitions/v2Hook"
        },
        "timeout": {
          "type": "string",
          "format": "uint64"
        },
        "projectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v2CreateHookResponse": {
      "type": "object",
      "properties": {
        "hookId": {
          "type": "string"
        }
      }
    },
    "v2CreateObjectRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "collection name"
        },
        "description": {
          "type": "string",
          "title": "description"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "collection specific labels / hooks"
        },
        "externalRelations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ExternalRelation"
          },
          "title": "External relations (URLs / IDs from external sources)"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass",
          "title": "DataClass"
        },
        "projectId": {
          "type": "string"
        },
        "collectionId": {
          "type": "string"
        },
        "datasetId": {
          "type": "string"
        },
        "hashes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Hash"
          }
        }
      }
    },
    "v2CreateObjectResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/v2Object"
        }
      }
    },
    "v2CreateProjectRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Project name"
        },
        "description": {
          "type": "string",
          "title": "Description"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "Project specific labels / hooks"
        },
        "externalRelations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ExternalRelation"
          },
          "title": "External relations (URLs / IDs from external sources)"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass",
          "title": "DataClass"
        },
        "preferredEndpoint": {
          "type": "string",
          "title": "Preferred endpoint"
        }
      }
    },
    "v2CreateProjectResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project",
          "title": "The freshly created project"
        }
      }
    },
    "v2CreateServiceAccountRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "permission": {
          "$ref": "#/definitions/v2Permission"
        }
      }
    },
    "v2CreateServiceAccountResponse": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "$ref": "#/definitions/v2ServiceAccount"
        }
      }
    },
    "v2CreateServiceAccountTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/v2Token",
          "title": "This contains only the token description"
        },
        "tokenSecret": {
          "type": "string",
          "title": "This is the actual secret API token"
        }
      }
    },
    "v2CreateStreamConsumerResponse": {
      "type": "object",
      "properties": {
        "streamConsumer": {
          "type": "string"
        }
      }
    },
    "v2CreateWorkspaceRequest": {
      "type": "object",
      "properties": {
        "workspaceTemplate": {
          "type": "string",
          "title": "Workspace template id"
        },
        "description": {
          "type": "string",
          "title": "Description of this workspace instance"
        }
      }
    },
    "v2CreateWorkspaceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "v2CreateWorkspaceTemplateRequest": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string",
          "title": "The user id of the template owner (will be automatically added as \"admin\" to each associated workspace)"
        },
        "prefix": {
          "type": "string",
          "title": "Short prefix for each workspace_project (will be prepended by a random id) example: test-i12ashj9g2"
        },
        "name": {
          "type": "string",
          "title": "The name of the workspace template"
        },
        "hookIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Hooks that are added to created workspaces"
        },
        "description": {
          "type": "string",
          "title": "Description of the workspace"
        },
        "endpointId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Endpoint ids that are used for this template"
        }
      }
    },
    "v2CreateWorkspaceTemplateResponse": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        }
      }
    },
    "v2Credentials": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "title": "Will be expanded with additional credential types"
    },
    "v2CustomAttributes": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        },
        "attributeValue": {
          "type": "string"
        }
      }
    },
    "v2DataClass": {
      "type": "string",
      "enum": [
        "DATA_CLASS_UNSPECIFIED",
        "DATA_CLASS_PUBLIC",
        "DATA_CLASS_PRIVATE",
        "DATA_CLASS_WORKSPACE",
        "DATA_CLASS_CONFIDENTIAL"
      ],
      "default": "DATA_CLASS_UNSPECIFIED",
      "title": "Dataclass defines the confidentiality of the object"
    },
    "v2DataEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullSynced": {
          "type": "boolean",
          "title": "Hint if the objects' project \nis fully synced to the endpoint"
        }
      }
    },
    "v2DataInfo": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "encryptionKey": {
          "type": "string"
        },
        "isCompressed": {
          "type": "boolean"
        }
      }
    },
    "v2DataInfos": {
      "type": "object",
      "properties": {
        "dataInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DataInfo"
          }
        }
      }
    },
    "v2DataProxyInfo": {
      "type": "object",
      "properties": {
        "dataproxyId": {
          "type": "string"
        },
        "availableSpace": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v2Dataset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "Dataset specific labels / hooks"
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Relation"
          },
          "title": "Relations to internal and external sources"
        },
        "stats": {
          "$ref": "#/definitions/v2Stats"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/modelsv2Status"
        },
        "dynamic": {
          "type": "boolean"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DataEndpoint"
          }
        }
      }
    },
    "v2DatasetRelations": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "objectChildren": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2DeactivateUserResponse": {
      "type": "object"
    },
    "v2DeleteAPITokenResponse": {
      "type": "object"
    },
    "v2DeleteAPITokensResponse": {
      "type": "object"
    },
    "v2DeleteAuthorizationRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "v2DeleteAuthorizationResponse": {
      "type": "object"
    },
    "v2DeleteBucketResponse": {
      "type": "object"
    },
    "v2DeleteBundleRequest": {
      "type": "object",
      "properties": {
        "bundleId": {
          "type": "string"
        }
      }
    },
    "v2DeleteBundleResponse": {
      "type": "object"
    },
    "v2DeleteCollectionResponse": {
      "type": "object"
    },
    "v2DeleteDatasetResponse": {
      "type": "object"
    },
    "v2DeleteEndpointResponse": {
      "type": "object"
    },
    "v2DeleteHookResponse": {
      "type": "object"
    },
    "v2DeleteProjectResponse": {
      "type": "object"
    },
    "v2DeleteServiceAccountResponse": {
      "type": "object"
    },
    "v2DeleteServiceAccountTokenResponse": {
      "type": "object"
    },
    "v2DeleteServiceAccountTokensResponse": {
      "type": "object"
    },
    "v2DeleteStreamConsumerResponse": {
      "type": "object"
    },
    "v2DeleteWorkspaceResponse": {
      "type": "object"
    },
    "v2DeleteWorkspaceTemplateResponse": {
      "type": "object"
    },
    "v2Endpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "epVariant": {
          "$ref": "#/definitions/v2EndpointVariant"
        },
        "name": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/storagemodelsv2ComponentStatus"
        },
        "hostConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2EndpointHostConfig"
          }
        }
      }
    },
    "v2EndpointHostConfig": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "isPrimary": {
          "type": "boolean"
        },
        "ssl": {
          "type": "boolean"
        },
        "public": {
          "type": "boolean"
        },
        "hostVariant": {
          "$ref": "#/definitions/v2EndpointHostVariant"
        }
      }
    },
    "v2EndpointHostVariant": {
      "type": "string",
      "enum": [
        "ENDPOINT_HOST_VARIANT_UNSPECIFIED",
        "ENDPOINT_HOST_VARIANT_GRPC",
        "ENDPOINT_HOST_VARIANT_S3"
      ],
      "default": "ENDPOINT_HOST_VARIANT_UNSPECIFIED",
      "title": "Which features does the endpoint have"
    },
    "v2EndpointVariant": {
      "type": "string",
      "enum": [
        "ENDPOINT_VARIANT_UNSPECIFIED",
        "ENDPOINT_VARIANT_PERSISTENT",
        "ENDPOINT_VARIANT_VOLATILE"
      ],
      "default": "ENDPOINT_VARIANT_UNSPECIFIED",
      "title": "Which kind of endpoint"
    },
    "v2Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "v2EventMessage": {
      "type": "object",
      "properties": {
        "resourceEvent": {
          "$ref": "#/definitions/v2ResourceEvent"
        },
        "userEvent": {
          "$ref": "#/definitions/v2UserEvent"
        },
        "announcementEvent": {
          "$ref": "#/definitions/v2AnouncementEvent"
        }
      }
    },
    "v2EventVariant": {
      "type": "string",
      "enum": [
        "EVENT_VARIANT_UNSPECIFIED",
        "EVENT_VARIANT_CREATED",
        "EVENT_VARIANT_AVAILABLE",
        "EVENT_VARIANT_UPDATED",
        "EVENT_VARIANT_DELETED",
        "EVENT_VARIANT_SNAPSHOTTED"
      ],
      "default": "EVENT_VARIANT_UNSPECIFIED"
    },
    "v2ExternalHook": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/v2Credentials"
        },
        "customTemplate": {
          "type": "string",
          "title": "If empty a basic JSON template will be used"
        },
        "method": {
          "$ref": "#/definitions/v2Method",
          "title": "TODO: Optional request headers"
        }
      }
    },
    "v2ExternalRelation": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "definedVariant": {
          "$ref": "#/definitions/v2ExternalRelationVariant"
        },
        "customVariant": {
          "type": "string",
          "title": "Will only be filled if defined_variant == CUSTOM"
        }
      }
    },
    "v2ExternalRelationVariant": {
      "type": "string",
      "enum": [
        "EXTERNAL_RELATION_VARIANT_UNSPECIFIED",
        "EXTERNAL_RELATION_VARIANT_URL",
        "EXTERNAL_RELATION_VARIANT_IDENTIFIER",
        "EXTERNAL_RELATION_VARIANT_CUSTOM"
      ],
      "default": "EXTERNAL_RELATION_VARIANT_UNSPECIFIED",
      "title": "External Relations"
    },
    "v2FinishObjectStagingResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/v2Object",
          "title": "(new) Object overview"
        }
      }
    },
    "v2Finished": {
      "type": "object",
      "properties": {
        "addKeyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          }
        },
        "removeKeyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          }
        }
      }
    },
    "v2FullSyncEndpointResponse": {
      "type": "object",
      "properties": {
        "genericResource": {
          "$ref": "#/definitions/v2GenericResource"
        },
        "user": {
          "$ref": "#/definitions/v2User"
        },
        "pubkey": {
          "$ref": "#/definitions/v2Pubkey"
        }
      }
    },
    "v2GenericResource": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project"
        },
        "collection": {
          "$ref": "#/definitions/v2Collection"
        },
        "dataset": {
          "$ref": "#/definitions/v2Dataset"
        },
        "object": {
          "$ref": "#/definitions/v2Object"
        }
      }
    },
    "v2GetAPITokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/v2Token",
          "title": "List of API tokens"
        }
      }
    },
    "v2GetAPITokensResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Token"
          },
          "title": "List of API tokens with redacted actual token"
        }
      }
    },
    "v2GetAllUsersResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2User"
          }
        }
      }
    },
    "v2GetAnouncementsResponse": {
      "type": "object",
      "properties": {
        "anouncements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Anouncement"
          }
        }
      }
    },
    "v2GetAuthorizationsResponse": {
      "type": "object",
      "properties": {
        "authorizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ResourceAuthorization"
          }
        }
      }
    },
    "v2GetCollectionResponse": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2Collection",
          "title": "Overview of the requested collection"
        }
      }
    },
    "v2GetCollectionsResponse": {
      "type": "object",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Collection"
          },
          "title": "List of collection overviews"
        }
      }
    },
    "v2GetCredentialsRequest": {
      "type": "object"
    },
    "v2GetCredentialsResponse": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "v2GetDataproxyTokenSvcAccountResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v2GetDataproxyTokenUserResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v2GetDatasetResponse": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/v2Dataset",
          "title": "Overview of the requested dataset"
        }
      }
    },
    "v2GetDatasetsResponse": {
      "type": "object",
      "properties": {
        "datasets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Dataset"
          },
          "title": "List of dataset overviews"
        }
      }
    },
    "v2GetDefaultEndpointResponse": {
      "type": "object",
      "properties": {
        "endpoint": {
          "$ref": "#/definitions/v2Endpoint",
          "title": "Default endpoint of the server instance"
        }
      }
    },
    "v2GetDownloadURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL"
        }
      }
    },
    "v2GetEndpointResponse": {
      "type": "object",
      "properties": {
        "endpoint": {
          "$ref": "#/definitions/v2Endpoint",
          "title": "Overview of the requested endpoint"
        }
      }
    },
    "v2GetEndpointsResponse": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Endpoint"
          },
          "title": "List of endpoints"
        }
      }
    },
    "v2GetEventMessageBatchResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2EventMessage"
          }
        }
      }
    },
    "v2GetEventMessageStreamResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/v2EventMessage"
        }
      }
    },
    "v2GetHierarchyResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2ProjectRelations"
        },
        "collection": {
          "$ref": "#/definitions/v2CollectionRelations"
        },
        "dataset": {
          "$ref": "#/definitions/v2DatasetRelations"
        }
      }
    },
    "v2GetNotActivatedUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2User"
          },
          "title": "List of users that are not yet activated"
        }
      }
    },
    "v2GetObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Object"
          },
          "title": "A List of objects"
        }
      }
    },
    "v2GetPersonalNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2PersonalNotification"
          }
        }
      }
    },
    "v2GetProjectResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project",
          "title": "Overview of the projectroject"
        }
      }
    },
    "v2GetProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Project"
          },
          "title": "Overview of the projects"
        }
      }
    },
    "v2GetPubkeysResponse": {
      "type": "object",
      "properties": {
        "pubkeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Pubkey"
          }
        }
      }
    },
    "v2GetResourceResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v2ResourceWithPermission"
        }
      }
    },
    "v2GetResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ResourceWithPermission"
          }
        }
      }
    },
    "v2GetS3CredentialsSvcAccountResponse": {
      "type": "object",
      "properties": {
        "s3AccessKey": {
          "type": "string"
        },
        "s3SecretKey": {
          "type": "string"
        },
        "s3EndpointUrl": {
          "type": "string"
        }
      }
    },
    "v2GetS3CredentialsUserResponse": {
      "type": "object",
      "properties": {
        "s3AccessKey": {
          "type": "string"
        },
        "s3SecretKey": {
          "type": "string"
        },
        "s3EndpointUrl": {
          "type": "string"
        }
      }
    },
    "v2GetServiceAccountTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/v2Token",
          "title": "This contains only the token description"
        }
      }
    },
    "v2GetServiceAccountTokensResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Token"
          },
          "title": "This contains only the token description"
        }
      }
    },
    "v2GetStorageStatusResponse": {
      "type": "object",
      "properties": {
        "locationStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LocationStatus"
          },
          "title": "List of all locations and their component / status"
        }
      }
    },
    "v2GetStorageVersionResponse": {
      "type": "object",
      "properties": {
        "locationVersion": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LocationVersion"
          }
        }
      },
      "title": "Version of each component by location"
    },
    "v2GetUploadURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL"
        }
      }
    },
    "v2GetUserRedactedResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v2User",
          "title": "User info"
        }
      }
    },
    "v2GetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v2User",
          "title": "User info"
        }
      }
    },
    "v2GetWorkspaceTemplateResponse": {
      "type": "object",
      "properties": {
        "workspace": {
          "$ref": "#/definitions/v2WorkspaceInfo"
        }
      }
    },
    "v2Hash": {
      "type": "object",
      "properties": {
        "alg": {
          "$ref": "#/definitions/v2Hashalgorithm"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "v2Hashalgorithm": {
      "type": "string",
      "enum": [
        "HASHALGORITHM_UNSPECIFIED",
        "HASHALGORITHM_MD5",
        "HASHALGORITHM_SHA256"
      ],
      "default": "HASHALGORITHM_UNSPECIFIED"
    },
    "v2HeadObjectResponse": {
      "type": "object",
      "properties": {
        "contentLength": {
          "type": "string"
        },
        "exists": {
          "type": "boolean"
        }
      }
    },
    "v2Hook": {
      "type": "object",
      "properties": {
        "externalHook": {
          "$ref": "#/definitions/v2ExternalHook"
        },
        "internalHook": {
          "$ref": "#/definitions/v2InternalHook"
        }
      }
    },
    "v2HookCallbackResponse": {
      "type": "object"
    },
    "v2HookInfo": {
      "type": "object",
      "properties": {
        "hookId": {
          "type": "string"
        },
        "projectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hook": {
          "$ref": "#/definitions/v2Hook"
        },
        "trigger": {
          "$ref": "#/definitions/v2Trigger"
        },
        "timeout": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v2InitLocationResponse": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/v2ObjectLocation"
        }
      }
    },
    "v2InitMultiPartUploadResponse": {
      "type": "object",
      "properties": {
        "uploadId": {
          "type": "string"
        }
      }
    },
    "v2InitReplicationResponse": {
      "type": "object",
      "properties": {
        "ack": {
          "type": "boolean"
        }
      }
    },
    "v2InternalHook": {
      "type": "object",
      "properties": {
        "addLabel": {
          "$ref": "#/definitions/v2AddLabel"
        },
        "addHook": {
          "$ref": "#/definitions/v2AddHook"
        },
        "addRelation": {
          "$ref": "#/definitions/v2Relation"
        }
      }
    },
    "v2InternalRelation": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "resourceVariant": {
          "$ref": "#/definitions/v2ResourceVariant"
        },
        "definedVariant": {
          "$ref": "#/definitions/v2InternalRelationVariant"
        },
        "customVariant": {
          "type": "string",
          "title": "Will only be filled if defined_variant == CUSTOM"
        },
        "direction": {
          "$ref": "#/definitions/v2RelationDirection"
        }
      }
    },
    "v2InternalRelationVariant": {
      "type": "string",
      "enum": [
        "INTERNAL_RELATION_VARIANT_UNSPECIFIED",
        "INTERNAL_RELATION_VARIANT_BELONGS_TO",
        "INTERNAL_RELATION_VARIANT_ORIGIN",
        "INTERNAL_RELATION_VARIANT_VERSION",
        "INTERNAL_RELATION_VARIANT_METADATA",
        "INTERNAL_RELATION_VARIANT_POLICY",
        "INTERNAL_RELATION_VARIANT_CUSTOM"
      ],
      "default": "INTERNAL_RELATION_VARIANT_UNSPECIFIED",
      "title": "InternalRelations"
    },
    "v2KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "variant": {
          "$ref": "#/definitions/v2KeyValueVariant"
        }
      },
      "title": "A key value pair for hooks and labels"
    },
    "v2KeyValueVariant": {
      "type": "string",
      "enum": [
        "KEY_VALUE_VARIANT_UNSPECIFIED",
        "KEY_VALUE_VARIANT_LABEL",
        "KEY_VALUE_VARIANT_STATIC_LABEL",
        "KEY_VALUE_VARIANT_HOOK",
        "KEY_VALUE_VARIANT_HOOK_STATUS"
      ],
      "default": "KEY_VALUE_VARIANT_UNSPECIFIED",
      "description": "- KEY_VALUE_VARIANT_STATIC_LABEL: A Label that only admins can remove",
      "title": "KeyValueVariants"
    },
    "v2ListOwnedHooksResponse": {
      "type": "object",
      "properties": {
        "infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2HookInfo"
          }
        }
      }
    },
    "v2ListOwnedWorkspaceTemplatesResponse": {
      "type": "object",
      "properties": {
        "workspaces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2WorkspaceInfo"
          }
        }
      }
    },
    "v2ListProjectHooksResponse": {
      "type": "object",
      "properties": {
        "infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2HookInfo"
          }
        }
      }
    },
    "v2LocationStatus": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "title": "Status of a specific Location e.g Gießen / AVAILABLE"
        },
        "componentStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storageservicesv2ComponentStatus"
          }
        }
      }
    },
    "v2LocationVersion": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "title": "Status of a specific Location e.g Gießen / dataproxy / 0.5.0-beta.1"
        },
        "version": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2ComponentVersion"
          }
        }
      }
    },
    "v2Method": {
      "type": "string",
      "enum": [
        "METHOD_UNSPECIFIED",
        "METHOD_PUT",
        "METHOD_POST"
      ],
      "default": "METHOD_UNSPECIFIED"
    },
    "v2ModifyRelationsRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "addRelations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Relation"
          }
        },
        "removeRelations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Relation"
          }
        }
      }
    },
    "v2ModifyRelationsResponse": {
      "type": "object"
    },
    "v2NewVersion": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "component": {
          "type": "string"
        },
        "newVersion": {
          "type": "string"
        }
      }
    },
    "v2Object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "Collection specific labels / hooks"
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Relation"
          },
          "title": "Relations to internal and external sources"
        },
        "contentLen": {
          "type": "string",
          "format": "int64",
          "title": "Object only"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/modelsv2Status"
        },
        "dynamic": {
          "type": "boolean"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DataEndpoint"
          }
        },
        "hashes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Hash"
          },
          "title": "Object specific attributes"
        }
      }
    },
    "v2ObjectLocation": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "uploadId": {
          "type": "string"
        },
        "contentLength": {
          "type": "string"
        }
      }
    },
    "v2Permission": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "collectionId": {
          "type": "string"
        },
        "datasetId": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        },
        "permissionLevel": {
          "$ref": "#/definitions/v2PermissionLevel"
        }
      }
    },
    "v2PermissionLevel": {
      "type": "string",
      "enum": [
        "PERMISSION_LEVEL_UNSPECIFIED",
        "PERMISSION_LEVEL_NONE",
        "PERMISSION_LEVEL_READ",
        "PERMISSION_LEVEL_APPEND",
        "PERMISSION_LEVEL_WRITE",
        "PERMISSION_LEVEL_ADMIN"
      ],
      "default": "PERMISSION_LEVEL_UNSPECIFIED",
      "title": "Permission Levels"
    },
    "v2PersonalNotification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "variant": {
          "$ref": "#/definitions/v2PersonalNotificationVariant"
        },
        "message": {
          "type": "string",
          "title": "User A has requested access for resource B"
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Reference"
          },
          "title": "References to resource in the \"message\""
        }
      }
    },
    "v2PersonalNotificationVariant": {
      "type": "string",
      "enum": [
        "PERSONAL_NOTIFICATION_VARIANT_UNSPECIFIED",
        "PERSONAL_NOTIFICATION_VARIANT_ACCESS_REQUESTED",
        "PERSONAL_NOTIFICATION_VARIANT_PERMISSION_GRANTED",
        "PERSONAL_NOTIFICATION_VARIANT_PERMISSION_REVOKED",
        "PERSONAL_NOTIFICATION_VARIANT_PERMISSION_UPDATED",
        "PERSONAL_NOTIFICATION_VARIANT_ANNOUNCEMENT"
      ],
      "default": "PERSONAL_NOTIFICATION_VARIANT_UNSPECIFIED"
    },
    "v2Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "Short name according to BucketNamingRules"
        },
        "description": {
          "type": "string",
          "title": "Long name"
        },
        "keyValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2KeyValue"
          },
          "title": "Project specific labels / hooks"
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Relation"
          },
          "title": "Relations to internal and external sources"
        },
        "stats": {
          "$ref": "#/definitions/v2Stats"
        },
        "dataClass": {
          "$ref": "#/definitions/v2DataClass"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/modelsv2Status"
        },
        "dynamic": {
          "type": "boolean"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DataEndpoint"
          }
        }
      }
    },
    "v2ProjectRelations": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "collectionChildren": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2CollectionRelations"
          }
        },
        "datasetChildren": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DatasetRelations"
          }
        },
        "objectChildren": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2Pubkey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "key": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "v2PullReplicaRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "s3Path": {
          "$ref": "#/definitions/v2S3Path"
        }
      }
    },
    "v2PullReplicaResponse": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string"
        }
      }
    },
    "v2PushReplicaRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "s3Path": {
          "$ref": "#/definitions/v2S3Path"
        },
        "targetLocation": {
          "type": "string"
        }
      }
    },
    "v2PushReplicaResponse": {
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string"
        }
      }
    },
    "v2PutObjectResponse": {
      "type": "object"
    },
    "v2Reference": {
      "type": "object",
      "properties": {
        "refType": {
          "$ref": "#/definitions/v2ReferenceType"
        },
        "refName": {
          "type": "string",
          "title": "\"User A\" | file.txt"
        },
        "refValue": {
          "type": "string",
          "title": "0123AAA123AAA (id)"
        }
      }
    },
    "v2ReferenceType": {
      "type": "string",
      "enum": [
        "REFERENCE_TYPE_UNSPECIFIED",
        "REFERENCE_TYPE_USER",
        "REFERENCE_TYPE_RESOURCE"
      ],
      "default": "REFERENCE_TYPE_UNSPECIFIED"
    },
    "v2RegisterUserRequest": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "title": "user_displayname"
        },
        "email": {
          "type": "string",
          "title": "Mail address (optional)"
        },
        "project": {
          "type": "string",
          "title": "Project hint description string (optional)"
        }
      }
    },
    "v2RegisterUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "Created user id"
        }
      }
    },
    "v2Relation": {
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/v2ExternalRelation"
        },
        "internal": {
          "$ref": "#/definitions/v2InternalRelation"
        }
      }
    },
    "v2RelationDirection": {
      "type": "string",
      "enum": [
        "RELATION_DIRECTION_UNSPECIFIED",
        "RELATION_DIRECTION_INBOUND",
        "RELATION_DIRECTION_OUTBOUND"
      ],
      "default": "RELATION_DIRECTION_UNSPECIFIED",
      "title": "internal object relation type (direction)"
    },
    "v2ReplicationStatus": {
      "type": "string",
      "enum": [
        "REPLICATION_STATUS_UNSPECIFIED",
        "REPLICATION_STATUS_PENDING",
        "REPLICATION_STATUS_RUNNING",
        "REPLICATION_STATUS_FINISHED",
        "REPLICATION_STATUS_ERROR"
      ],
      "default": "REPLICATION_STATUS_UNSPECIFIED"
    },
    "v2ReplicationStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v2ReplicationStatus"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v2Reply": {
      "type": "object",
      "properties": {
        "reply": {
          "type": "string"
        },
        "salt": {
          "type": "string"
        },
        "hmac": {
          "type": "string"
        }
      }
    },
    "v2RequestReplicationResponse": {
      "type": "object",
      "properties": {
        "dataInfos": {
          "$ref": "#/definitions/v2DataInfos"
        },
        "ack": {
          "type": "boolean"
        }
      }
    },
    "v2RequestResourceAccessResponse": {
      "type": "object"
    },
    "v2Resource": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "persistentResourceId": {
          "type": "boolean"
        },
        "checksum": {
          "type": "string"
        },
        "resourceVariant": {
          "$ref": "#/definitions/v2ResourceVariant"
        }
      }
    },
    "v2ResourceAuthorization": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "userPermission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2UserPermission"
          }
        }
      }
    },
    "v2ResourceEvent": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v2Resource"
        },
        "eventVariant": {
          "$ref": "#/definitions/v2EventVariant"
        },
        "reply": {
          "$ref": "#/definitions/v2Reply"
        }
      }
    },
    "v2ResourceTarget": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "resourceVariant": {
          "$ref": "#/definitions/v2ResourceVariant"
        }
      }
    },
    "v2ResourceVariant": {
      "type": "string",
      "enum": [
        "RESOURCE_VARIANT_UNSPECIFIED",
        "RESOURCE_VARIANT_PROJECT",
        "RESOURCE_VARIANT_COLLECTION",
        "RESOURCE_VARIANT_DATASET",
        "RESOURCE_VARIANT_OBJECT"
      ],
      "default": "RESOURCE_VARIANT_UNSPECIFIED"
    },
    "v2ResourceWithPermission": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v2GenericResource"
        },
        "permission": {
          "$ref": "#/definitions/v2PermissionLevel"
        }
      }
    },
    "v2S3Path": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "v2ScheduledDowntime": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "component": {
          "type": "string"
        },
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2SearchResourcesRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        },
        "offset": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v2SearchResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2GenericResource"
          },
          "title": "Json list for each found resource"
        },
        "estimatedTotal": {
          "type": "string",
          "format": "int64",
          "title": "How many results are expected to be found ?"
        },
        "lastIndex": {
          "type": "string",
          "format": "int64",
          "title": "The last index returned"
        }
      }
    },
    "v2SemanticVersion": {
      "type": "object",
      "properties": {
        "versionString": {
          "type": "string",
          "title": "Complete version string"
        },
        "major": {
          "type": "integer",
          "format": "int32",
          "title": "Semver according to https://semver.org/"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        },
        "labels": {
          "type": "string"
        }
      }
    },
    "v2ServiceAccount": {
      "type": "object",
      "properties": {
        "svcAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permission": {
          "$ref": "#/definitions/v2Permission"
        }
      }
    },
    "v2SetAnouncementsRequest": {
      "type": "object",
      "properties": {
        "anouncementsUpsert": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Anouncement"
          }
        },
        "anouncementsDelete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2SetAnouncementsResponse": {
      "type": "object",
      "properties": {
        "anouncements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Anouncement"
          }
        }
      }
    },
    "v2SetServiceAccountPermissionResponse": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "$ref": "#/definitions/v2ServiceAccount"
        }
      }
    },
    "v2SnapshotCollectionResponse": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2Collection",
          "title": "This collection will be returned via an Persistent Identifier! Updates will be impossible"
        }
      }
    },
    "v2SnapshotDatasetResponse": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/v2Dataset",
          "title": "This dataset will be returned via an Persistent Identifier! Updates will be impossible"
        }
      }
    },
    "v2Stats": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Stats for a set of objects"
    },
    "v2StreamAll": {
      "type": "object"
    },
    "v2StreamFromDate": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v2StreamFromSequence": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v2Token": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "permission": {
          "$ref": "#/definitions/v2Permission",
          "title": "Tokens can either be personal or resource \"specific\""
        }
      }
    },
    "v2Trigger": {
      "type": "object",
      "properties": {
        "triggerType": {
          "$ref": "#/definitions/v2TriggerType"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v2TriggerType": {
      "type": "string",
      "enum": [
        "TRIGGER_TYPE_UNSPECIFIED",
        "TRIGGER_TYPE_HOOK_ADDED",
        "TRIGGER_TYPE_OBJECT_CREATED",
        "TRIGGER_TYPE_LABEL_ADDED",
        "TRIGGER_TYPE_STATIC_LABEL_ADDED",
        "TRIGGER_TYPE_HOOK_STATUS_CHANGED"
      ],
      "default": "TRIGGER_TYPE_UNSPECIFIED"
    },
    "v2UpdateAuthorizationRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "permissionLevel": {
          "$ref": "#/definitions/v2PermissionLevel"
        }
      }
    },
    "v2UpdateAuthorizationResponse": {
      "type": "object",
      "properties": {
        "userPermission": {
          "$ref": "#/definitions/v2UserPermission"
        }
      }
    },
    "v2UpdateCollectionDataClassResponse": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2Collection"
        }
      }
    },
    "v2UpdateCollectionDescriptionResponse": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2Collection"
        }
      }
    },
    "v2UpdateCollectionKeyValuesResponse": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2Collection"
        }
      }
    },
    "v2UpdateCollectionNameResponse": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2Collection"
        }
      }
    },
    "v2UpdateDatasetDataClassResponse": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/v2Dataset"
        }
      }
    },
    "v2UpdateDatasetDescriptionResponse": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/v2Dataset"
        }
      }
    },
    "v2UpdateDatasetKeyValuesResponse": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/v2Dataset"
        }
      }
    },
    "v2UpdateDatasetNameResponse": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/v2Dataset"
        }
      }
    },
    "v2UpdateObjectResponse": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/v2Object"
        },
        "newRevision": {
          "type": "boolean"
        }
      }
    },
    "v2UpdateProjectDataClassResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project"
        }
      }
    },
    "v2UpdateProjectDescriptionResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project"
        }
      }
    },
    "v2UpdateProjectKeyValuesResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project"
        }
      }
    },
    "v2UpdateProjectNameResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v2Project"
        }
      }
    },
    "v2UpdateUserDisplayNameRequest": {
      "type": "object",
      "properties": {
        "newDisplayName": {
          "type": "string",
          "title": "New display name"
        }
      }
    },
    "v2UpdateUserDisplayNameResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v2User",
          "title": "Updated user info"
        }
      }
    },
    "v2UpdateUserEmailResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v2User"
        }
      }
    },
    "v2UploadPartResponse": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string"
        }
      }
    },
    "v2User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Internal Aruna UserID"
        },
        "externalId": {
          "type": "string",
          "title": "Oidc subject ID"
        },
        "displayName": {
          "type": "string",
          "title": "(optional) User display_name"
        },
        "active": {
          "type": "boolean",
          "title": "Is the user activated"
        },
        "email": {
          "type": "string",
          "title": "User email (empty if service account)"
        },
        "attributes": {
          "$ref": "#/definitions/v2UserAttributes",
          "title": "User attributes"
        }
      },
      "title": "------------- USERS \u0026 PERMISSIONS -----------------------"
    },
    "v2UserAttributes": {
      "type": "object",
      "properties": {
        "globalAdmin": {
          "type": "boolean"
        },
        "serviceAccount": {
          "type": "boolean"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Token"
          }
        },
        "trustedEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2CustomAttributes"
          }
        },
        "personalPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Permission"
          }
        }
      }
    },
    "v2UserEvent": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "eventVariant": {
          "$ref": "#/definitions/v2EventVariant"
        },
        "checksum": {
          "type": "string"
        },
        "reply": {
          "$ref": "#/definitions/v2Reply"
        }
      }
    },
    "v2UserPermission": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "permissionLevel": {
          "$ref": "#/definitions/v2PermissionLevel"
        }
      }
    },
    "v2WorkspaceInfo": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "hookIds": {
          "type": "string"
        },
        "endpointIds": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "AccessKeyAuth": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "AccessKeyAuth": []
    }
  ]
}
